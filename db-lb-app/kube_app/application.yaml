tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/4.5.5/types.yaml
  - plugin:cloudify-kubernetes-plugin

inputs:

  database_user:
    type: string
    default: drupal

  database_password:
    type: string
    default: 'U2FsdGVkX19VxMEA6AdZt5fccsn/JsFU4eGpttt13JI='

  database_name:
    type: string
    default: drupal

  load_balancer_deployment:
    type: string
    description: The deployment ID of the DB LB APP lb deployment. Usually either 'lb', 'public-cloud-lb', or 'private-cloud-lb'.
    default: lb

  kubernetes_deployment:
    type: string
    description: The deployment ID of the Kubernetes deployment.
    default: kubernetes

node_types:

  cloudify.kubernetes.resources.PersistentVolumeClaim:
    derived_from: cloudify.kubernetes.resources.CustomBlueprintDefinedResource
    properties:
      api_mapping:
        default:
          create:
            api: CoreV1Api
            method: create_namespaced_persistent_volume_claim
            payload: V1PersistentVolumeClaim
          read:
            api: CoreV1Api
            method: read_namespaced_persistent_volume_claim
          delete:
            api: CoreV1Api
            method: delete_namespaced_persistent_volume_claim
            payload: V1DeleteOptions
          update:
            api: CoreV1Api
            method: patch_namespaced_persistent_volume_claim

node_templates:

  pv:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/pv.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master

  pv-claim:
    type: cloudify.kubernetes.resources.PersistentVolumeClaim
    properties:
      definition:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: wp-pv-claim
          labels:
            app: wordpress
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: pv

  service:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/service.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: pv-claim

  deploy:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/deploy.yaml
        template_variables:
          WORDPRESS_DB_HOST: { get_capability: [ { get_input: load_balancer_deployment }, endpoint ] }
          WORDPRESS_DB_USER: { get_input: database_user }
          WORDPRESS_DB_PASSWORD: { get_input: database_password }
          WORDPRESS_DB_NAME: { get_input: database_name }
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: service

  master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        api_options:
          host: { concat: [ 'https://', { get_capability: [ { get_input: kubernetes_deployment }, endpoint ] }, ':6443' ] }
          api_key: { get_capability: [ { get_input: kubernetes_deployment }, token ] }
          debug: false
          verify_ssl: false
